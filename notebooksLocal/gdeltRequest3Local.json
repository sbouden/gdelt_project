{"paragraphs":[{"text":"%md\n## Requête 3\n\nDans ce notebook, nous construisons la requête 3:\n\n*Pour une source de donnés passée en paramètre (`gkg.SourceCommonName`) affichez les thèmes, personnes, lieux dont les articles de cette sources parlent ainsi que le le nombre d’articles et le ton moyen des articles (pour chaque thème/personne/lieu); permettez une agrégation par jour/mois/année.*","user":"anonymous","dateUpdated":"2020-01-23T09:41:57+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Requête 3</h2>\n<p>Dans ce notebook, nous construisons la requête 3:</p>\n<p><em>Pour une source de donnés passée en paramètre (<code>gkg.SourceCommonName</code>) affichez les thèmes, personnes, lieux dont les articles de cette sources parlent ainsi que le le nombre d’articles et le ton moyen des articles (pour chaque thème/personne/lieu); permettez une agrégation par jour/mois/année.</em></p>\n</div>"}]},"apps":[],"jobName":"paragraph_1579384014541_367529790","id":"20181212-102323_67420128","dateCreated":"2020-01-18T21:46:54+0000","dateStarted":"2020-01-23T09:41:57+0000","dateFinished":"2020-01-23T09:41:57+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1846"},{"text":"import org.apache.spark.sql.functions\nimport org.apache.spark.input.PortableDataStream\nimport java.util.zip.ZipInputStream\nimport java.io.BufferedReader\nimport java.io.InputStreamReader","user":"anonymous","dateUpdated":"2020-01-23T09:41:59+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.sql.functions\nimport org.apache.spark.input.PortableDataStream\nimport java.util.zip.ZipInputStream\nimport java.io.BufferedReader\nimport java.io.InputStreamReader\n"}]},"apps":[],"jobName":"paragraph_1579384014542_607795228","id":"20171217-232457_1732696781","dateCreated":"2020-01-18T21:46:54+0000","dateStarted":"2020-01-23T09:41:59+0000","dateFinished":"2020-01-23T09:41:59+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1847"},{"text":"// Select files\nval pathToSelection = \"/tmp/gdelt/data/2019120[1-2][0-9]*\"\n\n// Parquet files directory (keep / at the end)\nval pathToParquet = \"/tmp/gdelt/parquet/\"","user":"anonymous","dateUpdated":"2020-01-23T09:42:04+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"pathToSelection: String = /tmp/gdelt/data/2019120[1-2][0-9]*\npathToParquet: String = /tmp/gdelt/parquet/\n"}]},"apps":[],"jobName":"paragraph_1579384014543_-1474559127","id":"20200118-162838_1638931284","dateCreated":"2020-01-18T21:46:54+0000","dateStarted":"2020-01-23T09:42:04+0000","dateFinished":"2020-01-23T09:42:04+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1848"},{"text":"// define UDF functions\ndef toYear(s : String): Int = if (s.isEmpty) 0 else (s.slice(0, 0 + 4)).toInt\ndef toMonth(s : String): Int = if (s.isEmpty) 0 else (s.slice(4, 4 + 2)).toInt\ndef toDay(s : String): Int = if (s.isEmpty) 0 else (s.slice(6, 6 + 2)).toInt\n\ndef getTone(tones: String): Double = tones.split(\",\")(0).toDouble\n\n// define UDF\nval udfToYear = udf(toYear _)\nval udfToMonth = udf(toMonth _)\nval udfToDay = udf(toDay _)\n\nval udfGetTone = udf(getTone _)","user":"anonymous","dateUpdated":"2020-01-23T09:42:09+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"toYear: (s: String)Int\ntoMonth: (s: String)Int\ntoDay: (s: String)Int\ngetTone: (tones: String)Double\nudfToYear: org.apache.spark.sql.expressions.UserDefinedFunction = UserDefinedFunction(<function1>,IntegerType,Some(List(StringType)))\nudfToMonth: org.apache.spark.sql.expressions.UserDefinedFunction = UserDefinedFunction(<function1>,IntegerType,Some(List(StringType)))\nudfToDay: org.apache.spark.sql.expressions.UserDefinedFunction = UserDefinedFunction(<function1>,IntegerType,Some(List(StringType)))\nudfGetTone: org.apache.spark.sql.expressions.UserDefinedFunction = UserDefinedFunction(<function1>,DoubleType,Some(List(StringType)))\n"}]},"apps":[],"jobName":"paragraph_1579429552322_-1861464295","id":"20200119-102552_1071374132","dateCreated":"2020-01-19T10:25:52+0000","dateStarted":"2020-01-23T09:42:09+0000","dateFinished":"2020-01-23T09:42:10+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1849"},{"text":"// Load GKG\nval rddGkgEng = sc.binaryFiles(pathToSelection + \".gkg.csv.zip\") // charger quelques fichers via une regex\n   .flatMap {  // decompresser les fichiers\n       case (name: String, content: PortableDataStream) =>\n          val zis = new ZipInputStream(content.open)\n          Stream.continually(zis.getNextEntry)\n                .takeWhile{ case null => zis.close(); false\n                            case _ => true }\n                .flatMap { _ =>\n                    val br = new BufferedReader(new InputStreamReader(zis))\n                    Stream.continually(br.readLine()).takeWhile(_ != null)\n                }\n    }\n\nval dfGkgEng = rddGkgEng.map(x => x.split(\"\\t\")).toDF()\n\n// Load events (Translated)\nval rddGkgTrans = sc.binaryFiles(pathToSelection + \"translation.gkg.csv.zip\") // charger quelques fichers via une regex\n   .flatMap {  // decompresser les fichiers\n       case (name: String, content: PortableDataStream) =>\n          val zis = new ZipInputStream(content.open)\n          Stream.continually(zis.getNextEntry)\n                .takeWhile{ case null => zis.close(); false\n                            case _ => true }\n                .flatMap { _ =>\n                    val br = new BufferedReader(new InputStreamReader(zis))\n                    Stream.continually(br.readLine()).takeWhile(_ != null)\n                }\n    }\n\nval dfGkgTrans = rddGkgTrans.map(x => x.split(\"\\t\")).toDF()\n\n// make union\nval dfGkg = dfGkgEng.union(dfGkgTrans)","user":"anonymous","dateUpdated":"2020-01-23T09:42:14+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"rddGkgEng: org.apache.spark.rdd.RDD[String] = MapPartitionsRDD[1409] at flatMap at <console>:127\ndfGkgEng: org.apache.spark.sql.DataFrame = [value: array<string>]\nrddGkgTrans: org.apache.spark.rdd.RDD[String] = MapPartitionsRDD[1412] at flatMap at <console>:143\ndfGkgTrans: org.apache.spark.sql.DataFrame = [value: array<string>]\ndfGkg: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [value: array<string>]\n"}]},"apps":[],"jobName":"paragraph_1579384221976_-1679827554","id":"20200118-215021_1909285570","dateCreated":"2020-01-18T21:50:21+0000","dateStarted":"2020-01-23T09:42:14+0000","dateFinished":"2020-01-23T09:42:15+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1850"},{"text":"// Select columns and cast\nval dfGkg_3 = dfGkg\n    .withColumn(\"_tmp\", $\"value\")\n    .select($\"_tmp\".getItem(0).as(\"GkgRecordID\"),\n            udfToYear($\"_tmp\".getItem(1)).as(\"Year\"),\n            udfToMonth($\"_tmp\".getItem(1)).as(\"Month\"),\n            udfToDay($\"_tmp\".getItem(1)).as(\"Day\"),\n            $\"_tmp\".getItem(3).as(\"SourceCommonName\"),\n            $\"_tmp\".getItem(8).as(\"V2Themes\"),\n            $\"_tmp\".getItem(10).as(\"V2Locations\"),\n            $\"_tmp\".getItem(12).as(\"V2Persons\"),\n            udfGetTone($\"_tmp\".getItem(15)).as(\"Tone\"))\n    .withColumn(\"V2Themes\", split($\"V2Themes\", \";\"))\n    .withColumn(\"V2Locations\", split($\"V2Locations\", \";\"))\n    .withColumn(\"V2Persons\", split($\"V2Persons\", \";\"))\n    .filter(!($\"SourceCommonName\" === \"\"))\n\ndfGkg_3.printSchema()","user":"anonymous","dateUpdated":"2020-01-23T09:42:20+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- GkgRecordID: string (nullable = true)\n |-- Year: integer (nullable = true)\n |-- Month: integer (nullable = true)\n |-- Day: integer (nullable = true)\n |-- SourceCommonName: string (nullable = true)\n |-- V2Themes: array (nullable = true)\n |    |-- element: string (containsNull = true)\n |-- V2Locations: array (nullable = true)\n |    |-- element: string (containsNull = true)\n |-- V2Persons: array (nullable = true)\n |    |-- element: string (containsNull = true)\n |-- Tone: double (nullable = true)\n\ndfGkg_3: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [GkgRecordID: string, Year: int ... 7 more fields]\n"}]},"apps":[],"jobName":"paragraph_1579384014543_-1771323649","id":"20200113-215406_1630690280","dateCreated":"2020-01-18T21:46:54+0000","dateStarted":"2020-01-23T09:42:20+0000","dateFinished":"2020-01-23T09:42:20+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1851"},{"text":"// Themes\n// Explode + cleaning\nval df3GkgThemes = dfGkg_3\n    .withColumn(\"Theme\", explode_outer($\"V2Themes\"))\n    .withColumn(\"Theme\", split($\"Theme\", \",\")(0))\n    .select(\"GkgRecordID\",\n            \"SourceCommonName\",\n            \"Year\", \"Month\", \"Day\",\n            \"Tone\", \"Theme\")\n    .filter(!($\"Theme\" === \"\"))    \n    .dropDuplicates(\"GkgRecordID\", \"Theme\")\n\n// Aggregation\nval df3GkgThemesAgg = df3GkgThemes\n    .groupBy(\"SourceCommonName\", \"Year\", \"Month\", \"Day\", \"Theme\")\n    .agg(count($\"GkgRecordID\").as(\"NumArticles\"),\n         avg($\"Tone\").as(\"AvgTone\"))","user":"anonymous","dateUpdated":"2020-01-23T09:43:36+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"df3GkgThemes: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [GkgRecordID: string, SourceCommonName: string ... 5 more fields]\ndf3GkgThemesAgg: org.apache.spark.sql.DataFrame = [SourceCommonName: string, Year: int ... 5 more fields]\n"}]},"apps":[],"jobName":"paragraph_1579513502025_-1037554510","id":"20200120-094502_951694517","dateCreated":"2020-01-20T09:45:02+0000","dateStarted":"2020-01-23T09:42:33+0000","dateFinished":"2020-01-23T09:42:33+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1852"},{"text":"df3GkgThemesAgg.show()","user":"anonymous","dateUpdated":"2020-01-23T09:42:38+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------------+----+-----+---+--------------------+-----------+--------------------+\n|    SourceCommonName|Year|Month|Day|               Theme|NumArticles|             AvgTone|\n+--------------------+----+-----+---+--------------------+-----------+--------------------+\n|       annaharkw.com|2019|   12|  1|UNGP_FORESTS_RIVE...|         28|  0.8848910770391504|\n|           mcall.com|2019|   12|  1|TAX_MILITARY_TITL...|          1|    -5.9748427672956|\n|    lavanguardia.com|2019|   12|  1|WB_2203_HUMAN_RIGHTS|          2| -0.8608854747878455|\n|     hangzhou.com.cn|2019|   12|  1|   TAX_FNCACT_DEPUTY|         21|-0.04859413235390...|\n|            kcra.com|2019|   12|  1|      EPU_POLICY_LAW|          3| -3.1601122251854896|\n|             bbc.com|2019|   12|  1|             MEDICAL|         60| -3.7471308989479275|\n|    tagesanzeiger.ch|2019|   12|  1|    WB_470_EDUCATION|         13| -1.5301133807767977|\n|        inquirer.net|2019|   12|  1|                KILL|         30|  -3.219407815677033|\n|          iheart.com|2019|   12|  1|               TRIAL|        550|  -4.869106697273907|\n|              057.ua|2019|   12|  1|      EPU_CATS_TAXES|          1|    2.34604105571848|\n|       eastmoney.com|2019|   12|  1|       WB_2452_GANGS|         24|  1.2077500637473777|\n|malverngazette.co.uk|2019|   12|  1|   TAX_FNCACT_LEADER|         12|   -3.59684092441081|\n|      epochtimes.com|2019|   12|  1|        CONFISCATION|          3| -1.7733549693417503|\n|      giadinh.net.vn|2019|   12|  1|    TAX_FNCACT_ACTOR|          9|   3.076942163443818|\n|        elsol.com.ar|2019|   12|  1|WB_2470_PEACE_OPE...|          1|    -7.9155672823219|\n|          shm.com.cn|2019|   12|  1|   SLFID_RULE_OF_LAW|          3|   3.224005423109395|\n|            wcnc.com|2019|   12|  1|      GENERAL_HEALTH|          8| -2.1032008168187746|\n| thegardenisland.com|2019|   12|  1|MANMADE_DISASTER_...|         18|  -2.352982988145736|\n|           kbs.co.kr|2019|   12|  1| TAX_FNCACT_SOLDIERS|          1|   -6.81818181818182|\n|       progorodnn.ru|2019|   12|  1|      WB_840_JUSTICE|          3| -0.9781156286473799|\n+--------------------+----+-----+---+--------------------+-----------+--------------------+\nonly showing top 20 rows\n\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.17.0.2:4040/jobs/job?id=72"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1579435663638_-1316292466","id":"20200119-120743_1738233109","dateCreated":"2020-01-19T12:07:43+0000","dateStarted":"2020-01-23T09:42:38+0000","dateFinished":"2020-01-23T09:51:32+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1853"},{"text":"df3GkgThemesAgg.write.parquet(pathToParquet + \"request3Themes\")","user":"anonymous","dateUpdated":"2020-01-23T09:52:06+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.17.0.2:4040/jobs/job?id=73"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1579540199981_-2124978999","id":"20200120-170959_1434785182","dateCreated":"2020-01-20T17:09:59+0000","dateStarted":"2020-01-23T09:52:06+0000","dateFinished":"2020-01-23T09:58:57+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1854"},{"text":"// Persons\nval df3GkgPersons = dfGkg_3\n    .withColumn(\"Person\", explode_outer($\"V2Persons\"))\n    .withColumn(\"Person\", split($\"Person\", \",\")(0))\n    .select(\"GkgRecordID\",\n            \"SourceCommonName\",\n            \"Year\", \"Month\", \"Day\",\n            \"Tone\", \"Person\")\n    .filter(!($\"Person\" === \"\"))\n    .dropDuplicates(\"GkgRecordID\", \"Person\")\n\n// Aggregation\nval df3GkgPersonsAgg = df3GkgPersons\n    .groupBy(\"SourceCommonName\", \"Year\", \"Month\", \"Day\", \"Person\")\n    .agg(count($\"GkgRecordID\").as(\"NumArticles\"),\n         avg($\"Tone\").as(\"AvgTone\"))","user":"anonymous","dateUpdated":"2020-01-23T10:45:07+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"df3GkgPersons: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [GkgRecordID: string, SourceCommonName: string ... 5 more fields]\ndf3GkgPersonsAgg: org.apache.spark.sql.DataFrame = [SourceCommonName: string, Year: int ... 5 more fields]\n"}]},"apps":[],"jobName":"paragraph_1579541010482_380173406","id":"20200120-172330_1651184620","dateCreated":"2020-01-20T17:23:30+0000","dateStarted":"2020-01-23T10:45:07+0000","dateFinished":"2020-01-23T10:45:08+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1855"},{"text":"df3GkgPersonsAgg.show(false)","user":"anonymous","dateUpdated":"2020-01-23T10:45:39+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----------------------------+----+-----+---+-----------------------+-----------+-------------------+\n|SourceCommonName            |Year|Month|Day|Person                 |NumArticles|AvgTone            |\n+----------------------------+----+-----+---+-----------------------+-----------+-------------------+\n|derbytelegraph.co.uk        |2019|12   |1  |Colin Daniel           |2          |0.8122157244964275 |\n|zimbabwesituation.com       |2019|12   |1  |Enos Nkala             |1          |-4.24242424242424  |\n|as.com                      |2019|12   |1  |Franco Vazquez         |1          |-0.545851528384279 |\n|thehill.com                 |2019|12   |1  |Rosanne Barr           |12         |-1.8372159779711452|\n|southcarolinapublicradio.org|2019|12   |1  |Los Angeles            |1          |0.470035252643949  |\n|corren.se                   |2019|12   |1  |Linkping Ostergotland  |97         |-3.5135863883482337|\n|mlbtraderumors.com          |2019|12   |1  |Don Mattingly          |1          |1.71232876712329   |\n|torontosun.com              |2019|12   |1  |Justin Trudeau         |2          |-5.286774097917865 |\n|abc30.com                   |2019|12   |1  |Mercedes-Benz Superdome|1          |-6.15384615384615  |\n|app.com                     |2019|12   |1  |Mount Carmel           |1          |-5.3582554517134   |\n|corren.se                   |2019|12   |1  |Henrik Bernhard        |8          |0.0                |\n|brainpickings.org           |2019|12   |2  |Ross Gay               |1          |1.930848675348     |\n|nairaland.com               |2019|12   |2  |Musibau Kamilu         |1          |-0.122549019607843 |\n|kplr11.com                  |2019|12   |2  |Los Angeles            |1          |4.04040404040404   |\n|belfasttelegraph.co.uk      |2019|12   |2  |Robert Maxwell         |2          |-2.65502001934004  |\n|clickondetroit.com          |2019|12   |2  |Donald Trump           |16         |-1.3600291844881134|\n|dailystar.co.uk             |2019|12   |2  |Dick Whittington       |1          |3.6101083032491    |\n|elbalad.news                |2019|12   |2  |Manshyet Helwan        |1          |5.23255813953488   |\n|indiatimes.com              |2019|12   |2  |Amit Shah              |45         |-1.0956062237854445|\n|eastmoney.com               |2019|12   |2  |Asia Europe            |7          |1.7265414994659953 |\n+----------------------------+----+-----+---+-----------------------+-----------+-------------------+\nonly showing top 20 rows\n\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.17.0.2:4040/jobs/job?id=80"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1579776326979_378231768","id":"20200123-104526_567481078","dateCreated":"2020-01-23T10:45:26+0000","dateStarted":"2020-01-23T10:45:39+0000","dateFinished":"2020-01-23T10:48:49+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1856"},{"text":"df3GkgPersonsAgg.write.parquet(pathToParquet + \"request3Persons\")","user":"anonymous","dateUpdated":"2020-01-23T10:50:01+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.17.0.2:4040/jobs/job?id=81"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1579544266161_-313587311","id":"20200120-181746_1852516642","dateCreated":"2020-01-20T18:17:46+0000","dateStarted":"2020-01-23T10:50:02+0000","dateFinished":"2020-01-23T10:52:40+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1857"},{"text":"df3GkgPersonsAgg.show(false)","user":"anonymous","dateUpdated":"2020-01-23T13:06:16+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----------------------------+----+-----+---+-----------------------+-----------+-------------------+\n|SourceCommonName            |Year|Month|Day|Person                 |NumArticles|AvgTone            |\n+----------------------------+----+-----+---+-----------------------+-----------+-------------------+\n|derbytelegraph.co.uk        |2019|12   |1  |Colin Daniel           |2          |0.8122157244964275 |\n|zimbabwesituation.com       |2019|12   |1  |Enos Nkala             |1          |-4.24242424242424  |\n|as.com                      |2019|12   |1  |Franco Vazquez         |1          |-0.545851528384279 |\n|thehill.com                 |2019|12   |1  |Rosanne Barr           |12         |-1.8372159779711452|\n|southcarolinapublicradio.org|2019|12   |1  |Los Angeles            |1          |0.470035252643949  |\n|corren.se                   |2019|12   |1  |Linkping Ostergotland  |97         |-3.5135863883482337|\n|mlbtraderumors.com          |2019|12   |1  |Don Mattingly          |1          |1.71232876712329   |\n|torontosun.com              |2019|12   |1  |Justin Trudeau         |2          |-5.286774097917865 |\n|abc30.com                   |2019|12   |1  |Mercedes-Benz Superdome|1          |-6.15384615384615  |\n|app.com                     |2019|12   |1  |Mount Carmel           |1          |-5.3582554517134   |\n|corren.se                   |2019|12   |1  |Henrik Bernhard        |8          |0.0                |\n|brainpickings.org           |2019|12   |2  |Ross Gay               |1          |1.930848675348     |\n|nairaland.com               |2019|12   |2  |Musibau Kamilu         |1          |-0.122549019607843 |\n|kplr11.com                  |2019|12   |2  |Los Angeles            |1          |4.04040404040404   |\n|belfasttelegraph.co.uk      |2019|12   |2  |Robert Maxwell         |2          |-2.65502001934004  |\n|clickondetroit.com          |2019|12   |2  |Donald Trump           |16         |-1.3600291844881134|\n|dailystar.co.uk             |2019|12   |2  |Dick Whittington       |1          |3.6101083032491    |\n|elbalad.news                |2019|12   |2  |Manshyet Helwan        |1          |5.23255813953488   |\n|indiatimes.com              |2019|12   |2  |Amit Shah              |45         |-1.0956062237854445|\n|eastmoney.com               |2019|12   |2  |Asia Europe            |7          |1.7265414994659953 |\n+----------------------------+----+-----+---+-----------------------+-----------+-------------------+\nonly showing top 20 rows\n\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.17.0.2:4040/jobs/job?id=83"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1579541619758_-1578360372","id":"20200120-173339_337531354","dateCreated":"2020-01-20T17:33:39+0000","dateStarted":"2020-01-23T13:06:17+0000","dateFinished":"2020-01-23T13:10:49+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1858"},{"text":"// Locations\nval df3GkgLocations = dfGkg_3\n    .withColumn(\"Location\", explode_outer($\"V2Locations\"))\n    .withColumn(\"Location\", split($\"Location\", \"#\")(2))\n    .select(\"GkgRecordID\",\n            \"SourceCommonName\",\n            \"Year\", \"Month\", \"Day\",\n            \"Tone\", \"Location\")\n    .filter(!($\"Location\" === \"\"))\n    .dropDuplicates(\"GkgRecordID\", \"Location\")\n\n// Aggregation\nval df3GkgLocationsAgg = df3GkgLocations\n    .groupBy(\"SourceCommonName\", \"Year\", \"Month\", \"Day\", \"Location\")\n    .agg(count($\"GkgRecordID\").as(\"NumArticles\"),\n         avg($\"Tone\").as(\"AvgTone\"))\n","user":"anonymous","dateUpdated":"2020-01-23T09:43:53+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579541652138_715284644","id":"20200120-173412_2116466284","dateCreated":"2020-01-20T17:34:12+0000","dateStarted":"2020-01-20T17:59:17+0000","dateFinished":"2020-01-20T17:59:18+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1859"},{"text":" df3GkgLocationsAgg.show()","user":"anonymous","dateUpdated":"2020-01-20T18:06:37+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579542944015_-555379836","id":"20200120-175544_878641346","dateCreated":"2020-01-20T17:55:44+0000","dateStarted":"2020-01-20T18:06:37+0000","dateFinished":"2020-01-20T18:09:16+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1860"},{"text":"df3GkgLocationsAgg.write.parquet(pathToParquet + \"request3LocationsAgg\")","user":"anonymous","dateUpdated":"2020-01-23T09:40:49+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579543170083_151411267","id":"20200120-175930_1854895113","dateCreated":"2020-01-20T17:59:30+0000","dateStarted":"2020-01-20T18:21:59+0000","dateFinished":"2020-01-20T18:25:40+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1861"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579544519599_-1340982719","id":"20200120-182159_1981808444","dateCreated":"2020-01-20T18:21:59+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1862"}],"name":"gdeltRequest3Local","id":"2EWXWSWGS","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"sh:shared_process":[],"spark:shared_process":[],"cassandra:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}