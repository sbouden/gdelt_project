{"paragraphs":[{"text":"%md\n## Requête 3\n\nDans ce notebook, nous construisons la requête 3:\n\n*Pour une source de donnés passée en paramètre (`gkg.SourceCommonName`) affichez les thèmes, personnes, lieux dont les articles de cette sources parlent ainsi que le le nombre d’articles et le ton moyen des articles (pour chaque thème/personne/lieu); permettez une agrégation par jour/mois/année.*","user":"anonymous","dateUpdated":"2020-01-28T22:23:08+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Requête 3</h2>\n<p>Dans ce notebook, nous construisons la requête 3:</p>\n<p><em>Pour une source de donnés passée en paramètre (<code>gkg.SourceCommonName</code>) affichez les thèmes, personnes, lieux dont les articles de cette sources parlent ainsi que le le nombre d’articles et le ton moyen des articles (pour chaque thème/personne/lieu); permettez une agrégation par jour/mois/année.</em></p>\n</div>"}]},"apps":[],"jobName":"paragraph_1580250188487_924616503","id":"20181212-102323_67420128","dateCreated":"2020-01-28T22:23:08+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:8576"},{"text":"import org.apache.spark.sql.functions\nimport org.apache.spark.input.PortableDataStream\nimport java.util.zip.ZipInputStream\nimport java.io.BufferedReader\nimport java.io.InputStreamReader\n\nimport com.datastax.spark.connector._\nimport org.apache.spark.sql.cassandra._","user":"anonymous","dateUpdated":"2020-01-28T22:23:08+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.sql.functions\nimport org.apache.spark.input.PortableDataStream\nimport java.util.zip.ZipInputStream\nimport java.io.BufferedReader\nimport java.io.InputStreamReader\nimport com.datastax.spark.connector._\nimport org.apache.spark.sql.cassandra._\n"}]},"apps":[],"jobName":"paragraph_1580250188497_2005583007","id":"20171217-232457_1732696781","dateCreated":"2020-01-28T22:23:08+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:8577"},{"text":"spark.sparkContext.hadoopConfiguration.set(\"fs.s3a.connection.maximum\", \"1000000\")","user":"anonymous","dateUpdated":"2020-01-28T22:23:08+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1580250188498_1637839318","id":"20200123-174340_361544261","dateCreated":"2020-01-28T22:23:08+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:8578"},{"text":"// define UDF functions\ndef toYear(s : String): Int = if (s.isEmpty) 0 else (s.slice(0, 0 + 4)).toInt\ndef toMonth(s : String): Int = if (s.isEmpty) 0 else (s.slice(4, 4 + 2)).toInt\ndef toDay(s : String): Int = if (s.isEmpty) 0 else (s.slice(6, 6 + 2)).toInt\n\ndef getTone(tones: String): Double = tones.split(\",\")(0).toDouble\n\n// define UDF\nval udfToYear = udf(toYear _)\nval udfToMonth = udf(toMonth _)\nval udfToDay = udf(toDay _)\n\nval udfGetTone = udf(getTone _)","user":"anonymous","dateUpdated":"2020-01-28T22:23:08+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"toYear: (s: String)Int\ntoMonth: (s: String)Int\ntoDay: (s: String)Int\ngetTone: (tones: String)Double\nudfToYear: org.apache.spark.sql.expressions.UserDefinedFunction = UserDefinedFunction(<function1>,IntegerType,Some(List(StringType)))\nudfToMonth: org.apache.spark.sql.expressions.UserDefinedFunction = UserDefinedFunction(<function1>,IntegerType,Some(List(StringType)))\nudfToDay: org.apache.spark.sql.expressions.UserDefinedFunction = UserDefinedFunction(<function1>,IntegerType,Some(List(StringType)))\nudfGetTone: org.apache.spark.sql.expressions.UserDefinedFunction = UserDefinedFunction(<function1>,DoubleType,Some(List(StringType)))\n"}]},"apps":[],"jobName":"paragraph_1580250188499_234318877","id":"20200119-102552_1071374132","dateCreated":"2020-01-28T22:23:08+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:8579"},{"text":"// Load GKG\nval rddGkgEng = sc.binaryFiles(\"s3://aouani-habib-telecom-gdelt2019/20191201[0-9]*.gkg.csv.zip\") // charger quelques fichers via une regex\n   .flatMap {  // decompresser les fichiers\n       case (name: String, content: PortableDataStream) =>\n          val zis = new ZipInputStream(content.open)\n          Stream.continually(zis.getNextEntry)\n                .takeWhile{ case null => zis.close(); false\n                            case _ => true }\n                .flatMap { _ =>\n                    val br = new BufferedReader(new InputStreamReader(zis))\n                    Stream.continually(br.readLine()).takeWhile(_ != null)\n                }\n    }\n\nval dfGkgEng = rddGkgEng.map(x => x.split(\"\\t\")).toDF()","user":"anonymous","dateUpdated":"2020-01-28T22:23:08+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"rddGkgEng: org.apache.spark.rdd.RDD[String] = MapPartitionsRDD[1] at flatMap at <console>:38\ndfGkgEng: org.apache.spark.sql.DataFrame = [value: array<string>]\n"}]},"apps":[],"jobName":"paragraph_1580250188500_1939400019","id":"20200118-215021_1909285570","dateCreated":"2020-01-28T22:23:08+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:8580"},{"text":"// Load events (Translated)\nval rddGkgTrans = sc.binaryFiles(\"s3://aouani-habib-telecom-gdelt2019/20191201[0-9]*.translation.gkg.csv.zip\") // charger quelques fichers via une regex\n   .flatMap {  // decompresser les fichiers\n       case (name: String, content: PortableDataStream) =>\n          val zis = new ZipInputStream(content.open)\n          Stream.continually(zis.getNextEntry)\n                .takeWhile{ case null => zis.close(); false\n                            case _ => true }\n                .flatMap { _ =>\n                    val br = new BufferedReader(new InputStreamReader(zis))\n                    Stream.continually(br.readLine()).takeWhile(_ != null)\n                }\n    }\n\nval dfGkgTrans = rddGkgTrans.map(x => x.split(\"\\t\")).toDF()\n\n// make union\nval dfGkg = dfGkgEng.union(dfGkgTrans)","user":"anonymous","dateUpdated":"2020-01-28T22:23:08+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"rddGkgTrans: org.apache.spark.rdd.RDD[String] = MapPartitionsRDD[4] at flatMap at <console>:40\ndfGkgTrans: org.apache.spark.sql.DataFrame = [value: array<string>]\ndfGkg: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [value: array<string>]\n"}]},"apps":[],"jobName":"paragraph_1580250188501_-1777911138","id":"20200123-174553_294183844","dateCreated":"2020-01-28T22:23:08+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:8581"},{"text":"// Select columns and cast\nval dfGkg_3 = dfGkg\n    .withColumn(\"_tmp\", $\"value\")\n    .select($\"_tmp\".getItem(0).as(\"gkgrecordid\"),\n            udfToYear($\"_tmp\".getItem(1)).as(\"year\"),\n            udfToMonth($\"_tmp\".getItem(1)).as(\"month\"),\n            udfToDay($\"_tmp\".getItem(1)).as(\"day\"),\n            $\"_tmp\".getItem(3).as(\"sourcecommonname\"),\n            $\"_tmp\".getItem(8).as(\"v2themes\"),\n            $\"_tmp\".getItem(10).as(\"v2locations\"),\n            $\"_tmp\".getItem(12).as(\"v2persons\"),\n            udfGetTone($\"_tmp\".getItem(15)).as(\"Tone\"))\n    .withColumn(\"v2themes\", split($\"v2themes\", \";\"))\n    .withColumn(\"v2locations\", split($\"v2locations\", \";\"))\n    .withColumn(\"v2persons\", split($\"v2persons\", \";\"))\n    .filter(!($\"SourceCommonName\" === \"\"))\n\ndfGkg_3.printSchema()","user":"anonymous","dateUpdated":"2020-01-28T22:23:08+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- gkgrecordid: string (nullable = true)\n |-- year: integer (nullable = false)\n |-- month: integer (nullable = false)\n |-- day: integer (nullable = false)\n |-- sourcecommonname: string (nullable = true)\n |-- v2themes: array (nullable = true)\n |    |-- element: string (containsNull = true)\n |-- v2locations: array (nullable = true)\n |    |-- element: string (containsNull = true)\n |-- v2persons: array (nullable = true)\n |    |-- element: string (containsNull = true)\n |-- Tone: double (nullable = false)\n\ndfGkg_3: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [gkgrecordid: string, year: int ... 7 more fields]\n"}]},"apps":[],"jobName":"paragraph_1580250188502_-1385124374","id":"20200113-215406_1630690280","dateCreated":"2020-01-28T22:23:08+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:8582"},{"text":"// Themes\n// Explode + cleaning\nval df3GkgThemes = dfGkg_3\n    .withColumn(\"theme\", explode_outer($\"v2themes\"))\n    .withColumn(\"theme\", split($\"theme\", \",\")(0))\n    .select(\"gkgrecordid\",\n            \"sourcecommonName\",\n            \"year\", \"month\", \"day\",\n            \"tone\", \"theme\")\n    .filter(!($\"theme\" === \"\"))    \n    .dropDuplicates(\"gkgrecordid\", \"theme\")\n\n// Aggregation\nval df3GkgThemesAgg = df3GkgThemes\n    .groupBy(\"sourcecommonname\", \"year\", \"month\", \"day\", \"theme\")\n    .agg(count($\"gkgrecordid\").as(\"numarticles\"),\n         avg($\"tone\").as(\"avgtone\"))","user":"anonymous","dateUpdated":"2020-01-28T22:23:08+0000","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"df3GkgThemes: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [gkgrecordid: string, sourcecommonName: string ... 5 more fields]\ndf3GkgThemesAgg: org.apache.spark.sql.DataFrame = [sourcecommonname: string, year: int ... 5 more fields]\n"}]},"apps":[],"jobName":"paragraph_1580250188502_1337967091","id":"20200120-094502_951694517","dateCreated":"2020-01-28T22:23:08+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:8583"},{"text":"// Persons\nval df3GkgPersons = dfGkg_3\n    .withColumn(\"person\", explode_outer($\"v2persons\"))\n    .withColumn(\"person\", split($\"person\", \",\")(0))\n    .select(\"gkgrecordid\",\n            \"sourcecommonname\",\n            \"year\", \"month\", \"day\",\n            \"tone\", \"person\")\n    .filter(!($\"person\" === \"\"))\n    .dropDuplicates(\"gkgrecordid\", \"person\")\n\n// Aggregation\nval df3GkgPersonsAgg = df3GkgPersons\n    .groupBy(\"sourcecommonname\", \"year\", \"month\", \"day\", \"person\")\n    .agg(count($\"gkgrecordid\").as(\"numarticles\"),\n         avg($\"tone\").as(\"avgtone\"))","user":"anonymous","dateUpdated":"2020-01-28T22:23:08+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"df3GkgPersons: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [gkgrecordid: string, sourcecommonname: string ... 5 more fields]\ndf3GkgPersonsAgg: org.apache.spark.sql.DataFrame = [sourcecommonname: string, year: int ... 5 more fields]\n"}]},"apps":[],"jobName":"paragraph_1580250188503_-1687424162","id":"20200120-172330_1651184620","dateCreated":"2020-01-28T22:23:08+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:8584"},{"text":"// Locations\nval df3GkgLocations = dfGkg_3\n    .withColumn(\"location\", explode_outer($\"v2locations\"))\n    .withColumn(\"location\", split($\"location\", \"#\")(2))\n    .select(\"gkgrecordid\",\n            \"sourcecommonname\",\n            \"year\", \"month\", \"day\",\n            \"tone\", \"location\")\n    .filter(!($\"Location\" === \"\"))\n    .dropDuplicates(\"gkgrecordid\", \"location\")\n\n// Aggregation\nval df3GkgLocationsAgg = df3GkgLocations\n    .groupBy(\"sourcecommonname\", \"year\", \"month\", \"day\", \"location\")\n    .agg(count($\"gkgrecordid\").as(\"numarticles\"),\n         avg($\"tone\").as(\"avgtone\"))\n","user":"anonymous","dateUpdated":"2020-01-28T22:23:08+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"df3GkgLocations: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [gkgrecordid: string, sourcecommonname: string ... 5 more fields]\ndf3GkgLocationsAgg: org.apache.spark.sql.DataFrame = [sourcecommonname: string, year: int ... 5 more fields]\n"}]},"apps":[],"jobName":"paragraph_1580250188504_419466284","id":"20200120-173412_2116466284","dateCreated":"2020-01-28T22:23:08+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:8585"},{"text":"df3GkgThemesAgg.write.cassandraFormat(\"request31\", \"gdelt_project\").save()","user":"anonymous","dateUpdated":"2020-01-28T22:23:08+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1580250188505_-2074186261","id":"20200123-180323_1823177608","dateCreated":"2020-01-28T22:23:08+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:8586"},{"text":"df3GkgPersonsAgg.write.cassandraFormat(\"request32\", \"gdelt_project\").save()","user":"anonymous","dateUpdated":"2020-01-28T22:23:08+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1580250188506_1183174676","id":"20200123-180751_572419693","dateCreated":"2020-01-28T22:23:08+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:8587"},{"text":"df3GkgLocationsAgg.write.cassandraFormat(\"request33\", \"gdelt_project\").save()","user":"anonymous","dateUpdated":"2020-01-28T22:23:08+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1580250188507_21351802","id":"20200123-180755_2124524919","dateCreated":"2020-01-28T22:23:08+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:8588"},{"text":"val request31_out = spark.read.cassandraFormat(\"request31\", \"gdelt_project\").load()\nrequest31_out.createOrReplaceTempView(\"request31\")\nz.show(spark.sql(\"\"\" SELECT * FROM request31 LIMIT 10 \"\"\"))","user":"anonymous","dateUpdated":"2020-01-28T22:23:08+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"sourcecommonname":"string","year":"string","month":"string","day":"string","theme":"string","avgtone":"string","numarticles":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"sourcecommonname\tyear\tmonth\tday\ttheme\tavgtone\tnumarticles\nogliopo.laprovinciacr.it\t2019\t12\t1\tARMEDCONFLICT\t0\t3\nogliopo.laprovinciacr.it\t2019\t12\t1\tARREST\t-9\t4\nogliopo.laprovinciacr.it\t2019\t12\t1\tCORRUPTION\t-12\t1\nogliopo.laprovinciacr.it\t2019\t12\t1\tCRIME_COMMON_ROBBERY\t-6\t1\nogliopo.laprovinciacr.it\t2019\t12\t1\tCRISISLEX_C05_NEED_OF_SHELTERS\t-13\t1\nogliopo.laprovinciacr.it\t2019\t12\t1\tCRISISLEX_C06_WATER_SANITATION\t-1\t2\nogliopo.laprovinciacr.it\t2019\t12\t1\tCRISISLEX_C07_SAFETY\t-4\t2\nogliopo.laprovinciacr.it\t2019\t12\t1\tCRISISLEX_CRISISLEXREC\t-4\t8\nogliopo.laprovinciacr.it\t2019\t12\t1\tCRISISLEX_O02_RESPONSEAGENCIESATCRISIS\t1\t1\nogliopo.laprovinciacr.it\t2019\t12\t1\tCRISISLEX_T01_CAUTION_ADVICE\t-1\t1\n"},{"type":"TEXT","data":"request31_out: org.apache.spark.sql.DataFrame = [sourcecommonname: string, year: int ... 5 more fields]\n"}]},"apps":[],"jobName":"paragraph_1580250188508_-1965227130","id":"20200123-195052_978747205","dateCreated":"2020-01-28T22:23:08+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:8589"},{"text":"val request32_out = spark.read.cassandraFormat(\"request32\", \"gdelt_project\").load()\nrequest32_out.createOrReplaceTempView(\"request32\")\nz.show(spark.sql(\"\"\" SELECT * FROM request32 LIMIT 10 \"\"\"))","user":"anonymous","dateUpdated":"2020-01-28T22:23:08+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"sourcecommonname":"string","year":"string","month":"string","day":"string","person":"string","avgtone":"string","numarticles":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"sourcecommonname\tyear\tmonth\tday\tperson\tavgtone\tnumarticles\nurotoday.com\t2019\t12\t1\tBrendan Gough\t-4\t1\nurotoday.com\t2019\t12\t1\tDaniel E Oliver\t-4\t1\nurotoday.com\t2019\t12\t1\tHoman Mohammadi\t-4\t1\nurotoday.com\t2019\t12\t1\tJessica M Frakes\t-4\t1\nurotoday.com\t2019\t12\t1\tKaylee Martinez\t-4\t1\nurotoday.com\t2019\t12\t1\tPeter A S Johnstone\t-4\t1\nurotoday.com\t2019\t12\t1\tSarah E Hoffe\t-4\t1\ncbnews.fr\t2019\t12\t1\tBertille Toledano\t2\t1\ncbnews.fr\t2019\t12\t1\tCharline Vanhoenacker\t0\t1\ncbnews.fr\t2019\t12\t1\tClm Bbdo\t-2\t1\n"},{"type":"TEXT","data":"request32_out: org.apache.spark.sql.DataFrame = [sourcecommonname: string, year: int ... 5 more fields]\n"}]},"apps":[],"jobName":"paragraph_1580250188508_631710982","id":"20200123-195058_1651368410","dateCreated":"2020-01-28T22:23:08+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:8590"},{"text":"val request33_out = spark.read.cassandraFormat(\"request33\", \"gdelt_project\").load()\nrequest33_out.createOrReplaceTempView(\"request33\")\nz.show(spark.sql(\"\"\" SELECT * FROM request33 LIMIT 10 \"\"\"))","user":"anonymous","dateUpdated":"2020-01-28T22:23:08+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"sourcecommonname":"string","year":"string","month":"string","day":"string","location":"string","avgtone":"string","numarticles":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"sourcecommonname\tyear\tmonth\tday\tlocation\tavgtone\tnumarticles\nurotoday.com\t2019\t12\t1\tUK\t0\t2\nurotoday.com\t2019\t12\t1\tUS\t-4\t1\ncbnews.fr\t2019\t12\t1\tAG\t0\t1\ncbnews.fr\t2019\t12\t1\tCH\t1\t1\ncbnews.fr\t2019\t12\t1\tFR\t1\t12\ncbnews.fr\t2019\t12\t1\tUK\t0\t2\ncbnews.fr\t2019\t12\t1\tUS\t0\t1\nadvocateanddemocrat.com\t2019\t12\t1\tAF\t-3\t1\nadvocateanddemocrat.com\t2019\t12\t1\tBR\t3\t1\nadvocateanddemocrat.com\t2019\t12\t1\tEG\t-3\t1\n"},{"type":"TEXT","data":"request33_out: org.apache.spark.sql.DataFrame = [sourcecommonname: string, year: int ... 5 more fields]\n"}]},"apps":[],"jobName":"paragraph_1580250188509_1319480514","id":"20200123-195102_811485928","dateCreated":"2020-01-28T22:23:08+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:8591"},{"text":" df3GkgLocationsAgg.show()","user":"anonymous","dateUpdated":"2020-01-28T22:23:08+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1580250188510_-2026583036","id":"20200120-175544_878641346","dateCreated":"2020-01-28T22:23:08+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:8592"},{"text":"df3GkgLocationsAgg.write.parquet(pathToParquet + \"request3LocationsAgg\")","user":"anonymous","dateUpdated":"2020-01-28T22:23:08+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1580250188511_-1641308887","id":"20200120-175930_1854895113","dateCreated":"2020-01-28T22:23:08+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:8593"},{"user":"anonymous","dateUpdated":"2020-01-28T22:23:08+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1580250188511_1561242408","id":"20200120-182159_1981808444","dateCreated":"2020-01-28T22:23:08+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:8594"}],"name":"gdeltRequest3_1month","id":"2EZUXY61N","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}